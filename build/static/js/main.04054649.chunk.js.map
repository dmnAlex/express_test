{"version":3,"sources":["components/Note.js","services/notes.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteService","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"sLAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCRpCK,EAAU,aA6BDC,EANK,CAChBC,OAtBW,WACX,IAAMC,EAAUC,IAAMC,IAAIL,GACpBM,EAAc,CAChBC,GAAI,IACJT,QAAS,mCACTU,KAAM,2BACNZ,WAAW,GAEf,OAAOO,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAerDO,OAZW,SAAAC,GAEX,OADgBV,IAAMW,KAAKf,EAASc,GACrBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWzCK,OARW,SAACT,EAAIO,GAEhB,OADgBV,IAAMa,IAAN,UAAajB,EAAb,YAAwBO,GAAMO,GAC/BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCjBvCO,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKtB,UAAU,QAAf,SACGsB,KAKDC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GA8FSC,EAzFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRlC,EACGC,SACAO,MAAK,SAAA2B,GACJR,EAASQ,QAEZ,IAGH,IAAMC,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAAA7C,GAAI,OAAIA,EAAKG,aA0C9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcuB,QAASc,IACvB,8BACE,yBAAQlC,QAAS,kBAAMiC,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAAA9C,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAlCD,SAACa,GAC1B,IAAMd,EAAOkC,EAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAElC,KAAOA,KAChCmC,EAAW,2BAAQjD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDK,EACGe,OAAOT,EAAImC,GACXjC,MAAK,SAAAkC,GACJf,EAASD,EAAMY,KAAI,SAAA9C,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOkD,SAEpDC,OAAM,SAAAC,GACLX,EAAgB,SAAD,OACJzC,EAAKK,QADD,sCAGfgD,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAG,GAAC,OAAIA,EAAElC,KAAOA,SAkBRwC,CAAmBtD,EAAKc,MAF3Cd,EAAKc,SAMhB,uBAAMyC,SA1DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBrD,QAAS+B,EACTrB,MAAM,IAAI4C,MAAOC,cACjBzD,UAAW0D,KAAKC,SAAW,IAG7BtD,EACGY,OAAOsC,GACP1C,MAAK,SAAAkC,GACJf,EAASD,EAAMf,OAAO+B,IACtBb,EAAW,QA8Cb,UACE,uBACE0B,MAAO3B,EACP4B,SA7CiB,SAACR,GACxBnB,EAAWmB,EAAMS,OAAOF,UA8CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC7GNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.04054649.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst noteService = {\r\n    getAll,\r\n    create,\r\n    update\r\n}\r\n\r\nexport default noteService","import React, { useState, useEffect } from 'react'\r\nimport Note from './Note'\r\nimport noteService from '../services/notes'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n  // console.log('render', notes.length, 'notes')\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}